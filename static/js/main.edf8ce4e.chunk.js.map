{"version":3,"sources":["components/ErrorComponent.js","components/FooterComponent.js","ProjectEnums.js","components/MemeCardComponent.js","store/actions/globalActions.js","components/MemePageComponent.js","components/MemeRouterComponent.js","components/NavigationComponent.js","components/AlertMessageComponent.js","components/UploadMemeComponent.js","App.js","reportWebVitals.js","store/reducers/globalReducer.js","memeDb.js","store/store.js","index.js"],"names":["Error","Footer","MEME_TYPE","VOTE_DIRECTION","MemeCard","meme","dispatch","useDispatch","handleVote","voteDirection","memeId","type","id","setVoteAction","Card","className","border","Body","Title","title","onClick","icon","starred","fasStar","farStar","size","Img","variant","src","img","Button","upvotes","faThumbsDown","downvotes","MemePage","memes","route","length","map","m","MemeRouter","allMemes","useSelector","state","hotMemes","filter","Number","regularMemes","library","add","faThumbsUp","Navigation","Navbar","bg","expand","sticky","to","Toggle","aria-controls","Collapse","Nav","AlertMessage","showMessage","messageContent","Alert","UploadMeme","initialFormData","url","useState","formData","setFormData","showSuccess","setShowSucces","handleFormData","e","target","name","value","trim","Form","onSubmit","preventDefault","uuidv4","payload","addMemeAction","setTimeout","Group","controlId","Label","Control","placeholder","required","onChange","accept","App","exact","path","router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","updateDownVote","updateUpVote","flipStarred","vote","updateVotesCallback","store","createStore","action","newArrayDowvote","newArrayStarred","newArrayUpvote","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edf8ce4e.chunk.js","sourcesContent":["export default function Error() {\n  return (\n    <div>\n      <h1>404 ERROR: Page not found</h1>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer>\n      <p>\n        This page was created as a project for the\n        <em> Frontend developer with Angular </em>\n        postgraduate course at WSB Wrocław\n      </p>\n      <p>Copyright © 2021 Arnau Vidal</p>\n    </footer>\n  );\n}\n","export const MEME_TYPE = {\n  HOT: 'hot',\n  REGULAR: 'regular',\n  ALL: 'all',\n};\n\nexport const VOTE_DIRECTION = {\n  UP: 'up',\n  DOWN: 'down',\n};\n","import { useDispatch } from 'react-redux';\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faStar as fasStar } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown, faStar as farStar } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { setVoteAction, setStarredAction } from '../store/actions/globalActions';\nimport { VOTE_DIRECTION } from '../ProjectEnums';\n\nlibrary.add(faThumbsUp, faThumbsDown, fasStar, farStar);\n\nexport default function MemeCard({ meme }) {\n  const dispatch = useDispatch();\n\n  const handleVote = (voteDirection) => {\n    dispatch(setVoteAction(voteDirection, meme.id));\n  };\n\n  const handleStarred = () => {\n    dispatch(setStarredAction(meme.id));\n  };\n\n  return (\n    <Card className=\"text-center meme-card bg-light\" border=\"dark\">\n      <Card.Body>\n        <div className=\"container-header\">\n          <Card.Title>{meme.title}</Card.Title>\n          <FontAwesomeIcon onClick={handleStarred} icon={meme.starred ? fasStar : farStar} size=\"lg\" />\n        </div>\n        <Card.Img variant=\"top\" src={meme.img} />\n\n        <Button className=\"btn-vote\" variant=\"info\" onClick={() => handleVote(VOTE_DIRECTION.UP)}>\n          <FontAwesomeIcon icon={['far', 'thumbs-up']} size=\"lg\" />\n          <p className=\"btn-text\">{meme.upvotes}</p>\n        </Button>\n\n        <Button className=\"btn-vote\" variant=\"info\" onClick={() => handleVote(VOTE_DIRECTION.DOWN)}>\n          <FontAwesomeIcon icon={faThumbsDown} size=\"lg\" />\n          <p className=\"btn-text\">{meme.downvotes}</p>\n        </Button>\n\n      </Card.Body>\n    </Card>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { VOTE_DIRECTION } from '../../ProjectEnums';\n\nexport const addMemeAction = ({ title, url }) => ({\n  type: 'ADD_MEME',\n  id: uuidv4(),\n  payload: {\n    id: uuidv4(),\n    title,\n    upvotes: 0,\n    downvotes: 0,\n    img: url,\n    starred: false,\n  },\n});\n\nexport const setStarredAction = (memeId) => ({\n  type: 'STAR',\n  id: memeId,\n});\n\nexport const setVoteAction = (voteDirection, memeId) => {\n  if (voteDirection === VOTE_DIRECTION.UP) {\n    return {\n      type: 'UPVOTE',\n      id: memeId,\n    };\n  }\n  return {\n    type: 'DOWNVOTE',\n    id: memeId,\n  };\n};\n","import MemeCard from './MemeCardComponent';\n\nexport default function MemePage({ memes, route }) {\n  if (memes.length) {\n    return (\n      <div className=\"container\">\n        {\n          memes.map((m) => (<MemeCard meme={m} key={m.id} />))\n        }\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h4>\n        There is no\n        {' '}\n        <strong>{route}</strong>\n        {' '}\n        memes at this moment\n      </h4>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport MemePage from './MemePageComponent';\nimport { MEME_TYPE } from '../ProjectEnums';\n\nexport default function MemeRouter({ route }) {\n  const allMemes = useSelector((state) => state.memes);\n\n  const hotMemes = allMemes.filter((m) => Number(m.upvotes - m.downvotes) >= 5);\n\n  const regularMemes = allMemes.filter((m) => Number(m.upvotes - m.downvotes) < 5);\n\n  switch (route) {\n    case MEME_TYPE.HOT:\n      return <MemePage memes={hotMemes} route={route} />;\n    case MEME_TYPE.REGULAR:\n      return <MemePage memes={regularMemes} route={route} />;\n    default:\n      return <MemePage memes={allMemes} route={route} />;\n  }\n}\n","import { NavLink } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function Navigation() {\n  return (\n    <div>\n      <Navbar className=\"py-0\" bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <NavLink className=\"navbar-brand mr-auto\" to=\"/home\"><h1>memes_wtf</h1></NavLink>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto nav-container py-0\">\n            <NavLink className=\"nav-link navbar-item py-0\" to=\"/regular\">regular</NavLink>\n            <NavLink className=\"nav-link navbar-item py-0\" to=\"/hot\">hot</NavLink>\n            <NavLink className=\"nav-link navbar-item py-0\" to=\"/upload-meme\">upload_meme</NavLink>\n          </Nav>\n\n        </Navbar.Collapse>\n\n      </Navbar>\n    </div>\n  );\n}\n","import Alert from 'react-bootstrap/Alert';\n\nexport default function AlertMessage({ showMessage, messageContent }) {\n  if (showMessage) {\n    return (\n      <Alert variant=\"info\">\n        {messageContent}\n      </Alert>\n    );\n  }\n  return <></>;\n}\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport AlertMessage from './AlertMessageComponent';\nimport { addMemeAction } from '../store/actions/globalActions';\n\nexport default function UploadMeme() {\n  const dispatch = useDispatch();\n\n  const initialFormData = { title: '', url: '' };\n  const [formData, setFormData] = useState(initialFormData);\n  const [showSuccess, setShowSucces] = useState(false);\n\n  const handleFormData = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value.trim(),\n    });\n  };\n\n  const resetUploadMemePage = () => {\n    setFormData({ ...initialFormData });\n    setShowSucces(true);\n    setTimeout(() => setShowSucces(false), 3000);\n  };\n\n  const handleAddMeme = (e) => {\n    e.preventDefault();\n    dispatch(addMemeAction(formData));\n    resetUploadMemePage();\n  };\n\n  return (\n    <Form onSubmit={handleAddMeme}>\n\n      <Form.Group controlId=\"formTitle\">\n        <Form.Label>title:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"type a title\"\n          required\n          value={formData.title}\n          onChange={handleFormData}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formUrl\">\n        <Form.Label>image url:</Form.Label>\n        <Form.Control\n          type=\"url\"\n          name=\"url\"\n          placeholder=\"type an url\"\n          required\n          accept=\"image/*\"\n          value={formData.url}\n          onChange={handleFormData}\n        />\n      </Form.Group>\n\n      <Button className=\"btn-upload-form\" type=\"submit\" variant=\"info\">submit</Button>\n      <AlertMessage showMessage={showSuccess} messageContent=\"Your meme has been submited!\" />\n\n    </Form>\n  );\n}\n","import {\n  BrowserRouter as Router, Route, Switch,\n} from 'react-router-dom';\nimport './App.css';\n\nimport Error from './components/ErrorComponent';\nimport Footer from './components/FooterComponent';\nimport MemeRouter from './components/MemeRouterComponent';\nimport { MEME_TYPE } from './ProjectEnums';\nimport Navigation from './components/NavigationComponent';\nimport UploadMeme from './components/UploadMemeComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n\n          <Route exact path={['/', '/home']}>\n            <MemeRouter router={MEME_TYPE.ALL} />\n          </Route>\n\n          <Route exact path=\"/regular\">\n            <MemeRouter route={MEME_TYPE.REGULAR} />\n          </Route>\n\n          <Route exact path=\"/hot\">\n            <MemeRouter route={MEME_TYPE.HOT} />\n          </Route>\n\n          <Route exact path=\"/upload-meme\">\n            <UploadMeme />\n          </Route>\n\n          <Route exact path=\"*\">\n            <Error />\n          </Route>\n\n        </Switch>\n\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { memeDb } from '../../memeDb';\n\nconst initialState = {\n  memes: memeDb,\n};\n\nconst updateDownVote = (meme) => ({ ...meme, downvotes: meme.downvotes + 1 });\n\nconst updateUpVote = (meme) => ({ ...meme, upvotes: meme.upvotes + 1 });\n\nconst flipStarred = (meme) => ({ ...meme, starred: !meme.starred });\n\nconst vote = (memeId, memes, updateVotesCallback) => memes.map((meme) => {\n  if (meme.id !== memeId) {\n    return meme;\n  }\n  return updateVotesCallback(meme);\n});\n\nexport const globalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_MEME': {\n      return {\n        ...state,\n        memes: [...state.memes, action.payload],\n      };\n    }\n    case 'DOWNVOTE': {\n      const newArrayDowvote = vote(action.id, state.memes, updateDownVote);\n      return {\n        ...state,\n        memes: newArrayDowvote,\n      };\n    }\n    case 'STAR': {\n      const newArrayStarred = vote(action.id, state.memes, flipStarred);\n      return {\n        ...state,\n        memes: newArrayStarred,\n      };\n    }\n    case 'UPVOTE': {\n      const newArrayUpvote = vote(action.id, state.memes, updateUpVote);\n      return {\n        ...state,\n        memes: newArrayUpvote,\n      };\n    }\n    default: return { ...state };\n  }\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const memeDb = [\n  {\n    id: uuidv4(),\n    title: 'Rest',\n    upvotes: 6,\n    downvotes: 0,\n    img: 'https://i.postimg.cc/jqzFnM1H/9fFD7Sh.jpg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'killem all',\n    upvotes: 1,\n    downvotes: 6,\n    img: 'https://i.postimg.cc/kGFYr5S1/AySFpJC.jpg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'extra hell',\n    upvotes: 10,\n    downvotes: 3,\n    img: 'https://i.postimg.cc/SxKT5kxd/K618E0X.jpg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'Space Cat',\n    upvotes: 0,\n    downvotes: 0,\n    img: 'https://i.imgur.com/IZvHqDW.jpeg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: \"Dog's mess\",\n    upvotes: 0,\n    downvotes: 0,\n    img: 'https://i.imgur.com/CjZgiwh.jpeg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'zebra',\n    upvotes: 0,\n    downvotes: 0,\n    img: 'https://i.postimg.cc/QxhnQpLR/mU6rAFB.jpg',\n    starred: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'broken egg',\n    upvotes: 1,\n    downvotes: 0,\n    img: 'https://i.postimg.cc/hPsZpfch/7h08Otr.jpg',\n    starred: false,\n  },\n];\n","import { createStore } from 'redux';\nimport { globalReducer } from './reducers/globalReducer';\n\nconst store = createStore(globalReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}